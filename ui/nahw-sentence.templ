package ui

import "github.com/amrojjeh/kalam"

type NahwSentenceViewModel struct {
	Words []templ.Component
	Navigation templ.Component
	Cards []NahwCardViewModel
	Footer FooterViewModel
}

type NahwSentenceState int

const (
	NahwSentenceDefault = NahwSentenceState(iota)
	NahwSentenceCorrect
	NahwSentenceIncorrect
)

func NewNahwSentenceViewModel(excerptId int, i kalam.ExcerptIterator, selected string, footer FooterViewModel) NahwSentenceViewModel {
	m := NahwSentenceViewModel{
		Words: []templ.Component{},
		Navigation: navigation("0"),
		Cards: []NahwCardViewModel{},
		Footer: footer,
	}

	for wi, w := range i.Sentence().Words {
		m.Words = append(m.Words, Word(NewWordViewModel(w, i.WordI == wi)))
	}

	term := i.Word().Termination()
	termStr := term.Unpointed(true)

	if kalam.IsTanween(term.Vowel) {
		m.Cards = []NahwCardViewModel{
			NewNahwCardViewModel(excerptId, i.Index, termStr + string(kalam.Dammatan), "1"),
			NewNahwCardViewModel(excerptId, i.Index, termStr + string(kalam.Fathatan), "2"),
			NewNahwCardViewModel(excerptId, i.Index, termStr + string(kalam.Kasratan), "3"),
			NewNahwCardViewModel(excerptId, i.Index, termStr + string(kalam.Sukoon), "4"),
		}
	} else {
		m.Cards = []NahwCardViewModel{
			NewNahwCardViewModel(excerptId, i.Index, termStr + string(kalam.Damma), "1"),
			NewNahwCardViewModel(excerptId, i.Index, termStr + string(kalam.Fatha), "2"),
			NewNahwCardViewModel(excerptId, i.Index, termStr + string(kalam.Kasra), "3"),
			NewNahwCardViewModel(excerptId, i.Index, termStr + string(kalam.Sukoon), "4"),
		}
	}

	for x := 0; x < len(m.Cards); x++ {
		cm := &m.Cards[x]
		if cm.Value == selected {
			cm.State = NahwCardSelected
		}
	}

	return m
}

func (m NahwSentenceViewModel) DeactivateCards() NahwSentenceViewModel {
	for x := 0; x < len(m.Cards); x++ {
		c := &m.Cards[x]
		if c.State == NahwCardDefault {
			c.State = NahwCardUnselectable
		}
	}
	return m
}

func (m NahwSentenceViewModel) SwapCardState(
	prev, new NahwCardState) NahwSentenceViewModel {
	for x := 0; x < len(m.Cards); x++ {
		c := &m.Cards[x]
		if c.State == prev {
			c.State = new
		}
	}
	return m
}

func (m NahwSentenceViewModel) SetValueToCardState(
	value string, state NahwCardState) NahwSentenceViewModel {
	for x := 0; x < len(m.Cards); x++ {
		c := &m.Cards[x]
		if c.Value == value {
			c.State = state
		}
	}
	return m
}

func (m NahwSentenceViewModel) SetFooterState(
	state FooterState) NahwSentenceViewModel {
	m.Footer.State = state
	return m
}

templ NahwSentence(m NahwSentenceViewModel) {
	<div class="_screen-h _flex _flex-col">
		@m.Navigation
		<div class="sentence-question">
			<p class="text">
				for _, w := range m.Words {
					@w
				}
			</p>
			<div class="cards">
				for _, c := range m.Cards {
					@NahwCard(c)
				}
			</div>
		</div>
		@Footer(m.Footer)
	</div>
}
